<?php
// $Id$

function modalpop_schema() {
  $schema = array();

  // The name of the table can be any name we choose. However, namespacing the
  // table with the module name is best practice.
  
  $schema['modalpop_log'] = array(
    'fields' => array(
      'logid' => array(
        'description' => 'The primary identifier for this log entry.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'nid' => array(
        'description' => 'Primary key of the popup entity.',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'uid' => array(
        'description' => 'The {users}.uid that clicked the popup.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'whichbutt' => array(
        'description' => 'Which button was clicked.',
        'type' => 'varchar',
        'length' => 1,
        'not null' => TRUE,
        'default' => 0,
      ),
      'whichdate' => array(
        'description' => 'A Unix timestamp indicating when this popup was clicked.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('logid'),
  );
  
  
  
  return $schema;
  
}



/**
 * Install the new content type
 */
function modalpop_install() {
  
  // get the translation function relevant to our current localisation
  $t = get_t();
  // define the content type as an array (same as in hook_node_info())
  $modalpop = array(
    'type' => 'modalpop',
    'name' => $t('Modal pop-up'),
    'base' => 'node_content',
    'description' => $t('Nice and easy modal dialogue generator for advertising purposes'),
    'body_label' => $t('Pop-up content'),
    'promote' => 0,
    'status' => 1,
    'comment' => 0,
  );

  // set default values for anything not explicitly defined in the above array
  $content_type = node_type_set_defaults($modalpop);

  // add the body field to the content type
  node_add_body_field($content_type, 'Pop-up content');

  // create the content type
  node_type_save($content_type);
  
  
  //to hell with it, let's use the new drupal fields system
  foreach (_modalpop_installed_fields() AS $field) {
    field_create_field($field);
  }
  
  //create all the instances for our fields
  foreach (_modalpop_installed_instances() AS $instance) {
    $instance['entity_type'] = 'node';
    $instance['bundle'] = 'modalpop';
    field_create_instance($instance);
  }
}


/**
 * Define the fields required by the modalpop content type
 */
function _modalpop_installed_fields() {
  $t = get_t();
  return array(
    /**/
    
    'popstart' => array(
      'field_name' => 'popstart', 
      'label' => $t('Start date'), 
      'cardinality'  => 1,
      'type' => 'date',
    ),
    'popstop' => array(
      'field_name' => 'popstop', 
      'label' => $t('Stop date'), 
      'cardinality'  => 1,
      'type' => 'date',
    ),
    
    'pop_whichpage_text' => array(
      'field_name' => 'pop_whichpage_text', 
      'label' => $t('Which page(s)'), 
      'cardinality'  => 1,
      'type' => 'text_long',
      'settings'     => array(
        'max_length'  => 1000,
      ),
    ),
    
    
    
    'pop_butt1_label' => array(
      'field_name' => 'pop_butt1_label', 
      'label' => $t('Label 1'), 
      'cardinality'  => 1,
      'type' => 'text',
      'settings'     => array(
        'max_length'  => 500,
      ),
    ),
    'pop_butt1_link' => array(
      'field_name' => 'pop_butt1_link', 
      'label' => $t('Link 1'), 
      'cardinality'  => 1,
      'type' => 'text',
      'settings'     => array(
        'max_length'  => 500,
      ),
    ),
    'pop_butt1_expiry' => array(
      'field_name' => 'pop_butt1_expiry', 
      'label' => $t('Cookie expiry date'), 
      'cardinality'  => 1,
      'type' => 'text',
      'settings'     => array(
        'max_length'  => 500,
      ),
    ),
    
    'pop_butt2_label' => array(
      'field_name' => 'pop_butt2_label', 
      'label' => $t('Label 2'), 
      'type' => 'text',
      'settings'     => array(
        'max_length'  => 500,
      ),
    ),
    'pop_butt2_link' => array(
      'field_name' => 'pop_butt2_link', 
      'label' => $t('Link 2'), 
      'type' => 'text',
      'settings'     => array(
        'max_length'  => 500,
      ),
    ),
    'pop_butt2_expiry' => array(
      'field_name' => 'pop_butt2_expiry', 
      'label' => $t('Cookie expiry date'), 
      'type' => 'text',
      'settings'     => array(
        'max_length'  => 500,
      ),
    ),
    
    'pop_butt3_label' => array(
      'field_name' => 'pop_butt3_label', 
      'label' => $t('Label 3'), 
      'type' => 'text',
      'settings'     => array(
        'max_length'  => 500,
      ),
    ),
    'pop_butt3_link' => array(
      'field_name' => 'pop_butt3_link', 
      'label' => $t('Link 3'), 
      'type' => 'text',
      'settings'     => array(
        'max_length'  => 500,
      ),
    ),
    'pop_butt3_expiry' => array(
      'field_name' => 'pop_butt3_expiry', 
      'label' => $t('Cookie expiry date'), 
      'type' => 'text',
      'settings'     => array(
        'max_length'  => 500,
      ),
    ),
    
    /**/
    'pop_overlay_opacity' => array(
      'field_name' => 'pop_overlay_opacity', 
      'label' => $t('Overlay opacity'), 
      'type' => 'list_integer',
      'module' => 'list',
      'settings' => array(
        'allowed_values_function' => '_modalpop_opacity_options_list',
      ),
    ),
    
    
    
    
  );
}


function _modalpop_opacity_options_list()  {
  $options = array();
  for ($a = 0; $a <= 100; $a += 10) {
    $options[] = $a;
  }
  return $options;
}

/**
 * Define the field instances associated with the modalpop content type
 */
function _modalpop_installed_instances() {
  $t = get_t();
  $default_expiry = variable_get('modalpop_cookie_expiry', 30);
  $default_opacity = variable_get('modalpop_overlay_opacity', 50);
  return array(
    /**/
    
    
    'popstart' => array(
      'field_name' => 'popstart', 
      'label' => $t('Start date'), 
      'cardinality' => 1,
      'widget' => array(
        'type' => 'date_select', 
        'settings'   => array(
          'input_format' => date_default_format('date_select'),
          'increment' => 1,
          'year_range' => '-1:+3',
        ),
        'behaviors' => array(
          'multiple values' => FIELD_BEHAVIOR_CUSTOM,
          'default value' => FIELD_BEHAVIOR_CUSTOM,
        ),
      ), 
      'display' => array(
        'default' => array(
          'label' => $t('Start date'), 
          'type' => 'date_select', 
        ), 
      ), 
    ), 
    
    'popstop' => array(
      'field_name' => 'popstop', 
      'label' => $t('Stop date'), 
      'widget' => array(
        'type' => 'date_select', 
        'settings'   => array(
          'input_format' => date_default_format('date_select'),
          'increment' => 1,
          'year_range' => '-1:+3',
        ),
        'behaviors' => array(
          'multiple values' => FIELD_BEHAVIOR_CUSTOM,
          'default value' => FIELD_BEHAVIOR_CUSTOM,
        ),
      ), 
      'display' => array(
        'default' => array(
          'label' => $t('Stop date'), 
          'type' => 'date', 
        ), 
      ), 
    ), 
    
    'pop_whichpage_text' => array(
      'field_name' => 'pop_whichpage_text', 
      'type' => 'text', 
      'label' => $t('Which page(s)'), 
      'widget' => array(
        'type' => 'text_textarea', 
        'settings'     => array(
          'rows' => 5, 
        ),
      ), 
    ), 
    
    
    
    'pop_butt1_label' => array(
      'field_name' => 'pop_butt1_label', 
      'label' => $t('Label 1'), 
      'cardinality' => 1,
      'widget' => array(
        'type' => 'text_textfield', 
        'settings'     => array(
          'max_length'  => 500,
          'size' => 60,
        ),
      ), 
    ), 
    'pop_butt1_link' => array(
      'field_name' => 'pop_butt1_link', 
      'label' => $t('Link 1'), 
      'cardinality' => 1,
      'widget' => array(
        'type' => 'text_textfield', 
        'settings'     => array(
          'max_length'  => 500,
          'size' => 60,
        ),
      ), 
    ), 
    'pop_butt1_expiry' => array(
      'field_name' => 'pop_butt1_expiry', 
      'label' => $t('Expiry 1'), 
      'description' => $t('Enter a date in the format `YYYY-MM-DD`'),
      'cardinality' => 1,
      'default_value' => array(array('value' => $default_expiry)), 
      'widget' => array(
        'type' => 'text_textfield', 
        'settings'     => array(
          'max_length'  => 500,
          'size' => 60,
        ),
      ), 
    ), 
    
    
    
    'pop_butt2_label' => array(
      'field_name' => 'pop_butt2_label', 
      'label' => $t('Label 2'), 
      'cardinality' => 1,
      'widget' => array(
        'type' => 'text_textfield', 
        'settings'     => array(
          'max_length'  => 500,
          'size' => 60,
        ),
      ), 
    ), 
    'pop_butt2_link' => array(
      'field_name' => 'pop_butt2_link', 
      'label' => $t('Link 2'), 
      'cardinality' => 1,
      'widget' => array(
        'type' => 'text_textfield', 
        'settings'     => array(
          'max_length'  => 500,
          'size' => 60,
        ),
      ), 
    ), 
    'pop_butt2_expiry' => array(
      'field_name' => 'pop_butt2_expiry', 
      'label' => $t('Expiry 2'), 
      'description' => $t('Enter a date in the format `YYYY-MM-DD`'),
      'cardinality' => 1,
      'default_value' => array(array('value' => $default_expiry)), 
      'widget' => array(
        'type' => 'text_textfield', 
        'settings'     => array(
          'max_length'  => 500,
          'size' => 60,
        ),
      ), 
    ), 
    
    
    
    'pop_butt3_label' => array(
      'field_name' => 'pop_butt3_label', 
      'label' => $t('Label 3'), 
      'cardinality' => 1,
      'widget' => array(
        'type' => 'text_textfield', 
        'settings'     => array(
          'max_length'  => 500,
          'size' => 60,
        ),
      ), 
    ), 
    'pop_butt3_link' => array(
      'field_name' => 'pop_butt3_link', 
      'label' => $t('Link 3'), 
      'cardinality' => 1,
      'widget' => array(
        'type' => 'text_textfield', 
        'settings'     => array(
          'max_length'  => 500,
          'size' => 60,
        ),
      ), 
    ), 
    'pop_butt3_expiry' => array(
      'field_name' => 'pop_butt3_expiry', 
      'label' => $t('Expiry 3'), 
      'description' => $t('Enter a date in the format `YYYY-MM-DD`'),
      'cardinality' => 1,
      'default_value' => array(array('value' => $default_expiry)), 
      'widget' => array(
        'type' => 'text_textfield', 
        'settings'     => array(
          'max_length'  => 500,
          'size' => 60,
        ),
      ), 
    ), 
    
    /**/
    'pop_overlay_opacity' => array(
      'field_name' => 'pop_overlay_opacity', 
      'label' => $t('Overlay opacity'), 
      'description' => $t('Enter an integer between 0 and 100'),
      'cardinality' => 1,
      'default_value' => array(array('value' => $default_opacity)), 
      'widget' => array(
        'type' => 'options_select', 
        'module' => 'options',
      ), 
    ),
    
    
  );
}



/**
 * Implements hook_uninstall
 */
function modalpop_uninstall() {
  //gather up all the modalpop content...
  $results = db_query('SELECT nid FROM {node} n WHERE n.type = :type', array(':type' => 'modalpop'));
  $nids = array();
  foreach ($results AS $key => $value) {
    $nids[] = $value->nid;
  }
  
  //delete all modalpop nodes en masse
  node_delete_multiple($nids);
  
  //get rid of the fields
  foreach (array_keys(_modalpop_installed_fields()) AS $field) {
    field_delete_field($field);
  }
  
  //get rid of field instances
  $instances = field_info_instances('node', 'modalpop');
  foreach ($instances AS $instance_name => $instance) {
    field_delete_instance($instance);
  }
  
  //delete the content type
  node_type_delete('modalpop');
  
  //purge all field info
  field_purge_batch(1000);
  
  
}

